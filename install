#!/bin/bash

if [ "$1" == '-f' ]; then
  force="--override=*"
else
  force=""
fi

has_stow() {
  if [ ! -f "$(which stow)" ]; then
    echo 'Please install stow.'
    echo '  See http://www.gnu.org/software/stow/'
    echo ''
    echo '  To install:'
    case "$(uname)" in
      "Darwin")
        echo '  brew install stow'
        ;;
      "Linux")
        echo ' apt-get install stow'
        ;;
    esac
    exit 1
  fi
  return 0
}

has_oh_my_zsh() {
  OH_MY_ZSH_DIR=$HOME/.oh-my-zsh
  [ ! -d $OH_MY_ZSH_DIR ] && git clone git://github.com/robbyrussell/oh-my-zsh.git $OH_MY_ZSH_DIR
}

has_pygmentize() {
  # TODO: This should be much more generalized. I need to figure out how to find the styles directory without knowing it
  # exactly. This will now work cross platform.
  if [ -n "$(which pygmentize)" ]; then
    if [ -f "/Library/Python/2.7/site-packages/Pygments-1.6-py2.7.egg/pygments/styles/tomorrownight.py" ]; then
      echo "Pygments Tomorrow Night theme installed."
    else
      echo "The Pygments Tomorrow Night theme needs to be installed. Consider doing so by something like: "
      echo "  cp your/dotfiles/pygments/styles/tomorrownight.py /Library/Python/2.7/site-packages/Pygments-1.6-py2.7.egg/pygments/styles"
    fi
  else
    echo "Pygmentize is not installed. Consider doing so to get syntax highlighting."
  fi
}


install() {
  has_stow && has_oh_my_zsh

  has_pygmentize

  stow_failed=false
  for package in bash git ruby vim shell zsh
  do
    echo "Stowing $package"
    stow --verbose --target="$HOME" $force $package
    [ $? -ne 0 ] && echo "Unable to stow $package" && stow_failed=true
  done
  $stow_failed && echo "Unable to stow all files. Try ./install -f"


  # Setup Vim
  [ ! -d $HOME/.vim/bundle/vundle ] && git clone https://github.com/gmarik/vundle.git $HOME/.vim/bundle/vundle
  vim +BundleInstall +qall

  echo 'Installation complete'
}


install
